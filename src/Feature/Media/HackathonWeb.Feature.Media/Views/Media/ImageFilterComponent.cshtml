@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using HackathonWeb.Feature.Media.Pipelines.ML

@model HackathonWeb.Feature.Media.Models.ImageFilterComponentModel

<div @Html.Sxa().Component("image", Model.Attributes)>
    <div class="component-content">
        @Model.MessageIsEmpty

        @if (Model.OriginalImage != null)
        {
            <h2>
                <img src="@Url.Action("GetFile", new { id = Convert.ToBase64String(ImagePreprocessing.ConvertImageToArray(Model.OriginalImage))})" />
            </h2>
        }

        @if (Model.FilterImage != null)
        {
            <p>
                <img src="@Url.Action("GetFile", new { id = Convert.ToBase64String(ImagePreprocessing.ConvertImageToArray( Model.FilterImage))})" />
            </p>
        }

        @if (Model.HasImageCaption || (!Model.HasImageCaption && Html.Sxa().IsEdit))
        {
            <span class="image-caption">
                @if (Sitecore.Context.PageMode.IsExperienceEditorEditing)
                {
                    @Html.Sitecore().Field("ImageCaption", Model.GetRenderingWebEditingParams())
                }
                else
                {
                    @Html.Sitecore().Field("ImageCaption")
                }
            </span>
        }

        @if (Model.HasImageDescription || (!Model.HasImageDescription && Html.Sxa().IsEdit))
        {
            <span class="image-caption">
                @if (Sitecore.Context.PageMode.IsExperienceEditorEditing)
                {
                    @Html.Sitecore().Field("ImageDescription", Model.GetRenderingWebEditingParams())
                }
                else
                {
                    @Html.Sitecore().Field("ImageDescription")
                }
            </span>
        }
    </div>
</div>